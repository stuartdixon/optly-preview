[{"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2016-07-16T03:56:06.868510Z", "dcp_service_id": 8258484785, "id": 6529002483, "is_classic": false, "last_modified": "2017-10-21T22:28:41.906900Z", "name": "Production Optimizely (AKA \"My Project\")", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 10699, "enable_force_variation": true, "exclude_disabled_experiments": true, "exclude_names": false, "include_jquery": false, "ip_anonymization": false, "js_file_size": 158425, "library": "none", "project_javascript": "window.optimizely = window.optimizely || [];\n\n// Disable Optimizely is visitor is recognized as a bot\n// This mimics the logic in Gap's scode file\nvar optlyGapRef = document.referrer;\nvar optlyGapRefFlag = document.cookie;\nif (optlyGapRefFlag.indexOf('gap_ref') != -1) {\n\twindow.optimizely.push({\n\t\ttype: \"disable\"\n\t});\n}\nelse if (optlyGapRef === \"http://gap.com/\") {\n\twindow.optimizely.push({\n\t\ttype: \"disable\"\n\t});\n}\n\n// Store the visitor's current site as an attribute\nwindow.optimizely.push({\n  \"type\": \"user\",\n  \"attributes\": {\n    \"site\": document.location.hostname\n  }\n});\n\n// Temporary code to store Adobe Analytics IDs\n\nwindow.optlyGetCookie = function(name) {\n  var value = \"; \" + document.cookie;\n  var parts = value.split(\"; \" + name + \"=\");\n  if (parts.length == 2) return parts.pop().split(\";\").shift();\n};\n\nwindow.optlyGetAdobeId = window.setInterval(function(){  \n\tvar adobe_id = window.optlyGetCookie('s_vi');\n  if (typeof adobe_id !== \"undefined\") {\n  \t//console.log('[Optly / Custom] Adobe Analytics ID is: ' + adobe_id);\n    \n    // store adobe_id as an event\n    window.optimizely.push({\n\t  \t\"type\": \"event\",\n      \"eventName\": \"storedAAID\"\n    });\n    \n    window.optimizely.push({\n\t  \t\"type\": \"event\",\n      \"eventName\": adobe_id\n    });\n    \n    clearInterval(window.optlyGetAdobeId);\n  } else {\n  \t//console.log('[Optly / Custom] Adobe Analytics ID not yet defined');\n  }\n},1000);\n\n\n/*\n * Custom Adobe Analytics integration tools\n */\n\n// Initialize Optimizely array and other variables.\n//window.optimizely = window.optimizely || []; // already initialized\nvar isLogEnabled = false;\n\n// Log function to help with debugging custom integration.\nfunction integrationLogger(message) {\n  if(isLogEnabled) {\n    console.log('[Optimizely - Custom Integrator]: ' + message);\n  }\n}\n\n// Determines if entity has a `single_experiment` policy.\nfunction isExperiment(data) {\n  if (data.campaign.policy === \"single_experiment\") {\n    integrationLogger(data.campaign.name + \" is a single experiment.\");\n    return true;\n  } else {\n    integrationLogger(data.campaign.name + \" is NOT a single experiment.\");\n    return false;\n  }\n}\n\n// Determines if entity passes audiences conditions.\nfunction passesAudiences(data) {\n  if (data.decision.variationId !== null) {\n    integrationLogger(data.campaign.name + \" has passed audience conditions.\");\n    return true;\n  } else {\n    integrationLogger(data.campaign.name + \" has failed audience conditions.\");\n    return false;\n  }\n}\n  \n// Determines if entity passes traffic allocation.\nfunction passesTrafficAllocation(data) {\n  if (data.decision.isCampaignHoldback !== true) {\n    integrationLogger(data.campaign.name + \" has passed traffic allocation.\");\n    return true; \n  } else {\n    integrationLogger(data.campaign.name + \" has failed traffic allocation.\");\n    return false;\n  }\n}\n\n// Retrieves the variation name for a given experiment. Only works for `single_experiment` policies.\nfunction getVariationName(data, variationID) {\n  var variationName = \"\";\n  for (var variation in data.campaign.experiments[0].variations) {\n    if (data.campaign.experiments[0].variations[variation].id === variationID) {\n      variationName = data.campaign.experiments[0].variations[variation].name;\n      integrationLogger(\"Variation name is: \" + variationName);\n      return variationName;\n    }\n  }\n}\n\n// Populates experimentArray with relevant experiment data.\nfunction populateVariable(campaignName, variationName) {\n  integrationLogger(\"Populating experimentArray for: \" + campaignName);\n  integrator.experimentArray.push({campaignName: campaignName, variationName: variationName});\n}\n\nvar integrator = {\n  \n  experimentArray: [],\n\t\n  // Collects relevant experiment data.\n  registerExperiments: function(data) {\n    if (isExperiment(data) && passesAudiences(data) && passesTrafficAllocation(data)) {\n\t\t\tvar campaignID = data.decision.campaignId;\n      var campaignName = data.campaign.name;\n      var experimentID = data.decision.experimentId;\n      var variationID = data.decision.variationId;\n      var variationName = getVariationName(data, variationID);\n      populateVariable(campaignName, variationName);\n    }\n  },\n  \n  // REDIRECT: Collects relevant experiment data on redirects.\n  registerRedirectExperiments: function(data, state) {\n    if (state.getRedirectInfo() !== null) {\n      var redirect_campaign = state.getCampaignStates({visitorRedirected: true});\n      var campaignName = \"\";\n      var variationName = \"\";\n      var integrationSettings = {};\n\t\t\tfor (var key in redirect_campaign) {\n      \tcampaignName = redirect_campaign[key].campaignName;\n        variationName = redirect_campaign[key].variation.name;\n      }\n      populateVariable(campaignName, variationName);\n    }\n  }\n};\n\n// Extends the `optimizely` object with the custom integrator script.\n// USAGE: optimizely.get(\"custom/integrator\");\nwindow.optimizely.push({\n  type: \"registerModule\",\n  moduleName: \"integrator\",\n  module: integrator\n});\n\n// Listen for campaignDecided events, then execute handler.\nwindow.optimizely.push({\n  type: 'addListener',\n  filter: {\n    type: 'lifecycle',\n    name: 'campaignDecided',\n  },\n  handler: function(event) {\n    integrationLogger('Campaign Decided Event for ' + event.data.campaign.name);\n    var integrator = optimizely.get(\"custom/integrator\");\n    integrator.registerExperiments(event.data);\n  }\n});\n\n// REDIRECT: Listen for pageActivated events, then execute handler. campaignDecided events aren't sent on redirected page.\nwindow.optimizely.push({\n  type: \"addListener\",\n  filter: {\n    type: \"lifecycle\",\n    name: \"pageActivated\"\n  },\n  handler: function(event) {\n    var state = optimizely.get('state');\n    if (state.getRedirectInfo() !== null) {\n    \tintegrationLogger(\"Redirect detected.\");\n      var integrator = optimizely.get(\"custom/integrator\");\n  \t\tintegrator.registerRedirectExperiments(event.data, state);\n    }\n  }\n});\n\n//common code for content service experiments\n/*\n *(function ABSetup() {\n *\n * function setABCookie() {\n *   var ABVal = JSON.stringify(window.ABSegCookie || {});\n *   document.cookie = 'ABSeg=' + ABVal + ';domain=.gap.com;path=/';\n * }\n *\n * window.ABSegCookie = {};\n * \n * jQuery(document).ajaxComplete(function(event, request) {\n *   setABCookie();\n * });\n * \n * })();\n */\n"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-02-15T21:10:21.850880Z", "id": 8226728373, "is_classic": true, "last_modified": "2017-10-17T15:29:11.091390Z", "name": "Server-Side Experimentation (Development)", "platform": "custom", "sdks": ["node"], "status": "active"}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-03-15T17:11:19.308450Z", "id": 8289850741, "is_classic": false, "last_modified": "2017-10-20T17:49:58.195820Z", "name": "Pre-prod Web", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 630, "enable_force_variation": true, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 86883, "library": "none", "project_javascript": "\n\n\n\n\nwindow.optimizely = window.optimizely || [];\n\nif (document.location.href.indexOf('optly_debug=true') > -1) {\n  window.optimizely.push({\n    type: 'addListener',\n    filter: {\n      type: 'lifecycle',\n      name: 'layerDecided',\n    },\n    handler: function(data) {\n      console.log('[Optly / Custom] layer activated is:');\n      console.log(data.data.layer);\n      console.log('[Optly / Custom] the decisionTicket is:');\n      console.log(data.data.decisionTicket);\n      console.log('[Optly / Custom] decision made is:');\n      console.log(data.data.decision);\n      console.log('[Optly / Custom] the data object is:');\n      console.log(data);\n      console.log('[Optly / Custom] the Optimizely variation chosen is ' + data.data.decision.variationId);\n    }\n  });\n}\n\n\n"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-05-11T14:02:03.779550Z", "id": 8383314422, "is_classic": false, "last_modified": "2017-08-24T19:15:58.089480Z", "name": "Ben's Test Optly Project", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 6, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 71907, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-05-18T18:04:53.011650Z", "id": 8388872084, "is_classic": false, "last_modified": "2017-05-23T13:13:48.897970Z", "name": "Service Now", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 10, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 68664, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-06-05T16:56:59.736120Z", "id": 8418193669, "is_classic": false, "last_modified": "2017-08-08T22:44:39.468090Z", "name": "Sandbox", "platform": "web", "sdks": [], "status": "archived", "web_snippet": {"code_revision": 2, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 91, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-07-09T14:18:43.827790Z", "id": 8454989113, "is_classic": false, "last_modified": "2017-08-18T07:01:18.372210Z", "name": "BR US Web Marketing Content Personalization", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 40, "enable_force_variation": true, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 80349, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-08-01T17:30:09.221590Z", "id": 8512063485, "is_classic": true, "last_modified": "2017-10-10T22:06:36.960470Z", "name": "Server-Side Experimentation (Production)", "platform": "custom", "sdks": ["node"], "status": "active"}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-08-24T19:14:58.938100Z", "description": "test", "id": 8604593502, "is_classic": false, "last_modified": "2017-08-30T23:21:03.804440Z", "name": "test", "platform": "web", "sdks": [], "status": "archived", "web_snippet": {"code_revision": 3, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 91, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-08-28T21:09:34.434340Z", "description": "Currently (8/28) NOT LINKED", "id": 8629110211, "is_classic": false, "last_modified": "2017-10-16T17:58:30.325920Z", "name": "Athleta Marketing", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 10, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 76449, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-08-28T21:09:44.904500Z", "description": "Currently (8/28) NOT LINKED", "id": 8630880250, "is_classic": false, "last_modified": "2017-10-16T17:59:59.466530Z", "name": "Old Navy Marketing", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 17, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 76568, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-08-28T21:09:23.764010Z", "description": "Currently (8/28) NOT LINKED", "id": 8633380079, "is_classic": false, "last_modified": "2017-10-18T22:09:34.697270Z", "name": "BR Marketing", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 53, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 80697, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-08-28T21:09:12.666940Z", "description": "Currently (8/28) NOT LINKED", "id": 8637140106, "is_classic": false, "last_modified": "2017-10-17T16:19:58.981820Z", "name": "Gap Marketing", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 27, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 76460, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-09-21T18:44:21.471900Z", "id": 8784823080, "is_classic": false, "last_modified": "2017-10-18T18:34:29.286750Z", "name": "Product", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 18, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 78822, "library": "none"}}, {"account_id": 6529002483, "confidence_threshold": 0.9, "created": "2017-09-21T21:51:47.762760Z", "description": "mpp.do, orderconfirm.do, info.do, profile.do, storeLocator.do", "id": 8799342594, "is_classic": false, "last_modified": "2017-10-16T18:00:29.653050Z", "name": "Other Pages", "platform": "web", "sdks": [], "status": "active", "web_snippet": {"code_revision": 10, "enable_force_variation": false, "exclude_disabled_experiments": false, "exclude_names": true, "include_jquery": false, "ip_anonymization": false, "js_file_size": 76441, "library": "none"}}]